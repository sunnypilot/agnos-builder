name: build

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  # Get commit message (shared step)
  prepare:
    name: Prepare Environment
    runs-on: ubuntu-24.04-arm
    outputs:
      last_commit_message: ${{ steps.get_commit.outputs.last_commit_message }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Get commit message
        id: get_commit
        run: |
          LAST_COMMIT_MESSAGE=""
          if [ "${{ github.event_name }}" == "push" ]; then
            LAST_COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            COMMIT_URL=$(echo "${{ github.event.repository.commits_url }}" | sed "s|{/sha}|/${{ github.sha }}|")
            LAST_COMMIT_MESSAGE=$(curl -s "$COMMIT_URL" | jq -r '.commit.message')
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            PR_COMMIT_URL=$(echo "${{ github.event.repository.commits_url }}" | sed "s|{/sha}|/${{ github.event.pull_request.head.sha }}|")
            LAST_COMMIT_MESSAGE=$(curl -s "$PR_COMMIT_URL" | jq -r '.commit.message')
          fi
          echo "last_commit_message=$LAST_COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  # Build kernel
  kernel:
    name: Build Kernel
    runs-on: ubuntu-24.04-arm
    needs: prepare
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true

      - name: Get kernel submodule ref
        id: kernel-submodule
        run: echo "ref=$(git ls-tree HEAD | awk '$4 == "agnos-kernel-sdm845"' | awk '{print $3}')" | tee -a $GITHUB_OUTPUT

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: kernel-${{ steps.kernel-submodule.outputs.ref }}
          restore-keys: kernel-

      - name: Build kernel
        run: ./build_kernel.sh

      - name: Upload kernel artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel
          path: output/kernel

  # Build system
  system:
    name: Build System
    runs-on: ubuntu-24.04-arm
    needs: prepare
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true

      - name: Update VERSION
        if: github.event_name == 'pull_request'
        run: |
          echo -n $(cat VERSION)-$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7) > VERSION

      - name: Build system
        env:
          GIT_HASH: ${{ github.event.pull_request.head.sha }}
        run: ./build_system.sh

      - name: Upload system artifact
        uses: actions/upload-artifact@v4
        with:
          name: system
          path: output/system

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: output/build


  # Build userdata (optional parallel job)
  userdata:
    name: Build User Data
    runs-on: ubuntu-24.04-arm
    needs: prepare
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true

      - name: Build userdata
        run: scripts/build_userdata.sh

      - name: Upload userdata artifact
        uses: actions/upload-artifact@v4
        with:
          name: userdata
          path: output/userdata

  # Package and OTA push (converge step)
  package_ota:
    name: Package and OTA Push
    runs-on: ubuntu-24.04-arm
    needs: [kernel, system, userdata]
    if: contains(needs.prepare.outputs.last_commit_message, '[upload]')
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          submodules: true

      - name: Download kernel artifacts
        uses: actions/download-artifact@v4
        with:
          name: kernel
          path: output/kernel

      - name: Download system artifacts
        uses: actions/download-artifact@v4
        with:
          name: system
          path: output/system
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: output/build

      - name: Download userdata artifacts
        uses: actions/download-artifact@v4
        with:
          name: userdata
          path: output/userdata

      - name: Package OTA
        run: scripts/package_ota.py

      - name: Save PR number, VERSION, and stats
        run: |
          echo ${{ github.event.number }} > output/ota/PR
          cp VERSION output/ota
          scripts/analyze-agnos-rootfs.sh > output/ota/agnos_stats.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: agnos-artifacts
          path: output/ota
          compression-level: 0
